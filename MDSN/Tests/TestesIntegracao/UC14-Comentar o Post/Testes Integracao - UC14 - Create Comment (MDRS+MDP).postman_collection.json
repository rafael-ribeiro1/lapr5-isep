{
	"info": {
		"_postman_id": "36069f93-965b-4aa8-afd3-14ea40505aee",
		"name": "Testes Integracao - UC14 - Create Comment (MDRS+MDP)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Try to create post with non existing user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 for non-existing user\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\":\"001e8bfd-dc22-430d-abad-c869d3559a7c\",\r\n    \"text\":\"O meu 1o post\",\r\n    \"tags\":[]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/posts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create posting user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseJson=pm.response.json()\r",
							"\r",
							"pm.collectionVariables.set(\"userId\",responseJson.id)\r",
							"\r",
							"console.log(pm.collectionVariables.get(\"userId\"))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"user1\",\r\n    \"email\":\"1@gmail.com\",\r\n    \"password\":\"Password1?\",\r\n    \"birthdaydate\":\"2000/1/1\",\r\n    \"city\":\"fd1\",\r\n    \"description\":\"crl1\",\r\n    \"telephoneNumber\":\"+35156789\",\r\n    \"interestTags\":[\r\n        \"tag1\",\r\n        \"tag2\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5001/api/users",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create commenting user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseJson=pm.response.json()\r",
							"\r",
							"pm.collectionVariables.set(\"commentUserId\",responseJson.id)\r",
							"\r",
							"console.log(pm.collectionVariables.get(\"userId\"))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"user1\",\r\n    \"email\":\"1@gmail.com\",\r\n    \"password\":\"Password1?\",\r\n    \"birthdaydate\":\"2000/1/1\",\r\n    \"city\":\"fd1\",\r\n    \"description\":\"crl1\",\r\n    \"telephoneNumber\":\"+35156789\",\r\n    \"interestTags\":[\r\n        \"tag1\",\r\n        \"tag2\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5001/api/users",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseJson=pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"pm.collectionVariables.set(\"postId\",responseJson.id);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\":\"{{userId}}\",\r\n    \"text\":\"O meu 1o post\",\r\n    \"tags\":[]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/posts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Post Created",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseJson=pm.response.json()\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"comments array has 0 elements\", function () {\r",
							"    //responseJson.comments.length==0;\r",
							"    pm.expect(responseJson.comments.length).to.eql(0)\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:2000/api/posts/{{postId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "2000",
					"path": [
						"api",
						"posts",
						"{{postId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseJson=pm.response.json()\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"UserId is correct\", function () {\r",
							"    pm.expect(responseJson.userId).to.eql(pm.collectionVariables.get(\"commentUserId\"))\r",
							"});\r",
							"\r",
							"pm.test(\"Txt is teste\", function () {\r",
							"    pm.expect(responseJson.text).to.eql(pm.collectionVariables.get(\"text\"))\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"commentId\",responseJson.id)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"text\",\"teste\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"postId\":\"{{postId}}\",\r\n    \"userId\":\"{{commentUserId}}\",\r\n    \"text\":\"{{text}}\",\r\n    \"reactions\":[]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/posts/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"posts",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Post Created",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseJson=pm.response.json()\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"comments array has 1 element\", function () {\r",
							"    //responseJson.comments.length==0;\r",
							"    pm.expect(responseJson.comments.length).to.eql(1)\r",
							"});\r",
							"\r",
							"pm.test(\"comment has expected id\", function () {\r",
							"    //responseJson.comments.length==0;\r",
							"    pm.expect(responseJson.comments[0].id).to.eql(pm.collectionVariables.get(\"commentId\"))\r",
							"});\r",
							"\r",
							"pm.test(\"comment has expected user id\", function () {\r",
							"    //responseJson.comments.length==0;\r",
							"    pm.expect(responseJson.comments[0].userId).to.eql(pm.collectionVariables.get(\"commentUserId\"))\r",
							"});\r",
							"\r",
							"pm.test(\"comment has expected text\", function () {\r",
							"    //responseJson.comments.length==0;\r",
							"    pm.expect(responseJson.comments[0].text).to.eql(pm.collectionVariables.get(\"text\"))\r",
							"});\r",
							"\r",
							"pm.test(\"comment has emtpy reactions array\", function () {\r",
							"    //responseJson.comments.length==0;\r",
							"    pm.expect(responseJson.reactions.length).to.eql(0)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:2000/api/posts/{{postId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "2000",
					"path": [
						"api",
						"posts",
						"{{postId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Post",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:2000/api/test/posts/{{postId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "2000",
					"path": [
						"api",
						"test",
						"posts",
						"{{postId}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "postId",
			"value": ""
		},
		{
			"key": "commentId",
			"value": ""
		},
		{
			"key": "commentUserId",
			"value": ""
		},
		{
			"key": "text",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		}
	]
}